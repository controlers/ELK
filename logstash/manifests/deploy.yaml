apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: monitoring
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    log.level: info
    config.reload.automatic: true
    config.reload.interval: 300s
  logstash.conf: |
    # all input will come from filebeat, no local logs
    input {
      jdbc {
        jdbc_driver_library => "/home/logstash/mysql-connector-java/mysql-connector-java-8.0.30.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://211.159.215.12:21190/grafana"
        jdbc_user => "agent"
        jdbc_password => "qPKmN6kbCU4bk4b"
        # or jdbc_password_filepath => "/path/to/my/password_file"
        statement => "SELECT title from grafana.dashboard"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "50000"
        schedule => "* */6 * * *"
      } 
    }
    output {
        elasticsearch {
            hosts => [ "elasticsearch:9200" ]
            index => "mysql-jdbc-%{+YYYY.MM.dd}"
        }
        stdout {
          codec => json_lines
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      nodeName: agent2
      containers:
      - name: logstash
        image: logstash:7.16.3-mysql-jdbc
        ports:
        - containerPort: 5044
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash-service
  namespace: monitoring
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: ClusterIP
