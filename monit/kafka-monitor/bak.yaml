---
# Source: prometheus-kafka-exporter/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: ada-prometheus-kafka-exporter
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    heritage: Helm
    release: ada
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# Source: prometheus-kafka-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ada-prometheus-kafka-exporter
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    release: "ada"
    heritage: "Helm"
---
# Source: prometheus-kafka-exporter/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ada-prometheus-kafka-exporter
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    heritage: Helm
    release: ada
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [ada-prometheus-kafka-exporter]
---
# Source: prometheus-kafka-exporter/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ada-prometheus-kafka-exporter
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    heritage: Helm
    release: ada
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ada-prometheus-kafka-exporter
subjects:
- kind: ServiceAccount
  name: ada-prometheus-kafka-exporter
---
# Source: prometheus-kafka-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ada-prometheus-kafka-exporter
  annotations:
    {}
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    release: ada
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9308
      targetPort: exporter-port
      protocol: TCP
      name: exporter-port
  selector:
    app: prometheus-kafka-exporter
    release: ada
---
# Source: prometheus-kafka-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ada-prometheus-kafka-exporter
  labels:
    app: prometheus-kafka-exporter
    chart: prometheus-kafka-exporter-1.5.0
    release: ada
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-kafka-exporter
      release: ada
  template:
    metadata:
      annotations:
        {}
      labels:
        app: prometheus-kafka-exporter
        release: ada
    spec:
      serviceAccountName: ada-prometheus-kafka-exporter
      containers:
        - args:
            - '--verbosity=0'
            - '--kafka.server=10.42.4.115:9092'
          env:
          name: prometheus-kafka-exporter
          image: "danielqsj/kafka-exporter:v1.4.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: exporter-port
              containerPort: 9308
              protocol: TCP
          resources:
            {}
---
# Source: prometheus-kafka-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ada-prometheus-kafka-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus-kafka-exporter
    helm.sh/chart: prometheus-kafka-exporter-1.5.0
    app.kubernetes.io/instance: ada
    app.kubernetes.io/managed-by: Helm
    release: ada
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: prometheus-kafka-exporter
      release: ada
  namespaceSelector:
    matchNames:
    - monitoring
  endpoints:
  - port: exporter-port
    interval: 30s
